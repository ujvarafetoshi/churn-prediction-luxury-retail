--- Total Purchases
SELECT COUNT(DISTINCT(ID_NUMRECEIPT)) FROM MASTER_SALES_ITEM_CUSTOMER_STORE WHERE LINETYPE = 1;

--FILTERED ITEM TABLE
SELECT
PRODUCT_ID_ITEM, PRODUCT_ID_BRAND,  PRODUCT_BRAND_NAME,  PRODUCT_BARCODE,  PRODUCT_FAMILY_CODE,  PRODUCT_NAME,  PRODUCT_ID_COLOR,  PRODUCT_COLOR_LABEL_FR, PRODUCT_BLEACHING_LABEL_EN,  PRODUCT_SIZE,  PRODUCT_SIZE_BASE,  PRODUCT_SHELF_CODE,  PRODUCT_SHELF_LABEL_EN,  PRODUCT_SHELF_LABEL_FR,  PRODUCT_DEPARTMENT_CODE,  PRODUCT_DEPARTMENT_LABEL_EN,  PRODUCT_DEPARTMENT_LABEL_FR,  PRODUCT_FAMILY_LABEL_EN,  PRODUCT_FAMILY_LABEL_FR,  PRODUCT_SUB_FAMILY_CODE,  PRODUCT_SUB_FAMILY_LABEL_EN,  PRODUCT_SUB_FAMILY_LABEL_FR,  PRODUCT_ID,  PRODUCT_CODE,  PRODUCT_LABEL,  PRODUCT_COLORTONE_CODE,  PRODUCT_COLOR_CODE,  PRODUCT_VARIANT_INDEX,  PRODUCT_IMPLANTATION_TARGET_WAVE,  PRODUCT_STATUS_CODE,  PRODUCT_STATUS_LABEL_EN,  PRODUCT_STATUS_LABEL_FR,  PRODUCT_INDEX_SIZE,  PRODUCT_SIZE_INDEX_BASE,  PRODUCT_NORTH_AMERICA_DISTRIBUTION,  PRODUCT_MANUFACTURING_COUNTRY_CODE,  SUM(NVL(CAST(PRODUCT_FURNITURE AS INT), 0)) AS PRODUCT_FURNITURE, SUM(NVL(CAST(PRODUCT_OUTLET AS INT), 0)) AS PRODUCT_OUTLET, SUM(NVL(CAST(PRODUCT_SALES_OUTFIT AS INT), 0)) AS PRODUCT_SALES_OUTFIT, SUM(NVL(CAST(PRODUCT_FREE AS INT), 0)) AS PRODUCT_FREE
FROM DIM_ITEMS
WHERE PRODUCT_ID_ITEM <> '1-0'
GROUP BY ALL;

---JOIN OF SALES AND FILTERD ITEMID TABLE (FOR EVERY TRANSACTION THERE IS A PRODUCT DETAILS)
WITH SALES_TABLE AS (SELECT *, CASE
WHEN DATE(DAYOFSALE) BETWEEN DATE('2020-02-01') AND DATE('2020-07-31') THEN 'E20'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2020-08-01') AND DATE('2021-01-31') THEN 'H20'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2021-02-01') AND DATE('2021-07-31') THEN 'E21'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2021-08-01') AND DATE('2022-01-31') THEN 'H21'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2022-02-01') AND DATE('2022-07-31') THEN 'E22'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2022-08-01') AND DATE('2023-01-31') THEN 'H22'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2023-02-01') AND DATE('2023-07-31') THEN 'E23'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2023-08-01') AND DATE('2024-01-31') THEN 'H23'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2024-02-01') AND DATE('2024-07-31') THEN 'E24'
ELSE 'OO' END AS SEASON_CODE
FROM FACT_SALES_LINES)
SELECT S.IDFACTSALESLINES, S.IDBRAND, S.IDBRANDSTORE, S.IDSTORE, S.IDCALENDAR, S.IDITEM, S.IDCUSTOMER, S.IDSTOREORIGINE, S.IDRECEIPTORIGINE, S.IDDISCOUNTTYPE, S.IDCURRENCY, S.CODECOUNTRY, S.DAYOFSALE, S.NUMRECEIPT, S.LINENUMBER, S.CODEITEM, S.CODECUSTOMER, S.LINETYPE, S.TYPEOFSALE, S.CODECURRENCY, S.CODESAISONGESTION, S.CODEMARKETINGACTION, S.VOLSALES, S.VOLSALES_NOTFREE, S.QTRETURN, S.QTSALE, S.TURNOVERLOC, S.SALETURNOVERLOC, S.TURNOVEREURO, S.SALETURNOVEREURO, S.RETURNTURNOVEREURO, S.FLAGDISCOUNT, S.AMTDISCOUNTLOC, S.AMTDISCOUNTEURO, S.NUMDISCOUNT, S.FLAGPROMO, S.FLAGSTRONGPRICE, S.AMTSALEPERIODLOC, S.AMTSALEPERIODEURO, S.AMTONMARKSLOC, S.AMTONMARKSEURO, S.AMTVATEURO, S.PRICESALEITEMCAISHLOC, S.PRICESALEITEMCAISHEURO, S.CODEVAT, S.RATEVAT, S.RECEIPTCANCEL, S.DATERECORD, S.EXCHANGERATE, S.AMTPURCHASEEXCLUDINGTAXEURO, S.NETPROFITMARGINEURO, S.ACTIVE, S.SEASON_CODE, I.*
FROM SALES_TABLE S
LEFT JOIN FILTERED_ITEM_TABLE I
ON S.IDITEM = I.PRODUCT_ID_ITEM;


-- ONLY USEFULL CUSTOMER TABLE WITH COLUMNS
SELECT SOURCE, IDBRAND, BRANDNAME, CUSTOMERCODE, CODESTORE, EMAIL_EXISTS, EMAIL_OPTIN, EMAIL_REACHABLE, MOBILE_EXISTS, MOBILE_OPTIN, MOBILE_REACHABLE, CUSTOMER_BIRTH_DAY, CUSTOMER_BIRTH_MONTH, CUSTOMER_BIRTH_YEAR  FROM DIM_CUSTOMER LIMIT 1000 ;

---JOIN OF SALES AND FILTERD CUSTOMER TABLE (FOR EVERY TRANSACTION THERE IS A CUSTOMER DETAILS)

WITH SALES_TABLE AS (SELECT *, CASE
WHEN DATE(DAYOFSALE) BETWEEN DATE('2020-02-01') AND DATE('2020-07-31') THEN 'E20'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2020-08-01') AND DATE('2021-01-31') THEN 'H20'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2021-02-01') AND DATE('2021-07-31') THEN 'E21'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2021-08-01') AND DATE('2022-01-31') THEN 'H21'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2022-02-01') AND DATE('2022-07-31') THEN 'E22'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2022-08-01') AND DATE('2023-01-31') THEN 'H22'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2023-02-01') AND DATE('2023-07-31') THEN 'E23'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2023-08-01') AND DATE('2024-01-31') THEN 'H23'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2024-02-01') AND DATE('2024-07-31') THEN 'E24'
ELSE 'OO' END AS SEASON_CODE
FROM FACT_SALES_LINES)
SELECT S.IDFACTSALESLINES, S.IDBRAND, S.IDBRANDSTORE, S.IDSTORE, S.IDCALENDAR, S.IDITEM, S.IDCUSTOMER, S.IDSTOREORIGINE, S.IDRECEIPTORIGINE, S.IDDISCOUNTTYPE, S.IDCURRENCY, S.CODECOUNTRY, S.DAYOFSALE, S.NUMRECEIPT, S.LINENUMBER, S.CODEITEM, S.CODECUSTOMER, S.LINETYPE, S.TYPEOFSALE, S.CODECURRENCY, S.CODESAISONGESTION, S.CODEMARKETINGACTION, S.VOLSALES, S.VOLSALES_NOTFREE, S.QTRETURN, S.QTSALE, S.TURNOVERLOC, S.SALETURNOVERLOC, S.TURNOVEREURO, S.SALETURNOVEREURO, S.RETURNTURNOVEREURO, S.FLAGDISCOUNT, S.AMTDISCOUNTLOC, S.AMTDISCOUNTEURO, S.NUMDISCOUNT, S.FLAGPROMO, S.FLAGSTRONGPRICE, S.AMTSALEPERIODLOC, S.AMTSALEPERIODEURO, S.AMTONMARKSLOC, S.AMTONMARKSEURO, S.AMTVATEURO, S.PRICESALEITEMCAISHLOC, S.PRICESALEITEMCAISHEURO, S.CODEVAT, S.RATEVAT, S.RECEIPTCANCEL, S.DATERECORD, S.EXCHANGERATE, S.AMTPURCHASEEXCLUDINGTAXEURO, S.NETPROFITMARGINEURO, S.ACTIVE, S.SEASON_CODE, C.SOURCE, C.BRANDNAME, C.CODESTORE, C.EMAIL_EXISTS, C.EMAIL_OPTIN, C.EMAIL_REACHABLE, C.MOBILE_EXISTS, C.MOBILE_OPTIN, C.MOBILE_REACHABLE, C.CUSTOMER_BIRTH_DAY, C.CUSTOMER_BIRTH_MONTH, C.CUSTOMER_BIRTH_YEAR
FROM SALES_TABLE S
LEFT JOIN DIM_CUSTOMER C
ON S.CODECUSTOMER = C.CUSTOMERCODE;


--A TABLE THAT HAS ALL THREE TABLES OF SALES, CUSTOMER AND ITEM MERGED IN ONE
WITH TABLE_1 AS (WITH SALES_TABLE AS (SELECT *, CASE
WHEN DATE(DAYOFSALE) BETWEEN DATE('2020-02-01') AND DATE('2020-07-31') THEN 'E20'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2020-08-01') AND DATE('2021-01-31') THEN 'H20'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2021-02-01') AND DATE('2021-07-31') THEN 'E21'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2021-08-01') AND DATE('2022-01-31') THEN 'H21'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2022-02-01') AND DATE('2022-07-31') THEN 'E22'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2022-08-01') AND DATE('2023-01-31') THEN 'H22'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2023-02-01') AND DATE('2023-07-31') THEN 'E23'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2023-08-01') AND DATE('2024-01-31') THEN 'H23'
WHEN DATE(DAYOFSALE) BETWEEN DATE('2024-02-01') AND DATE('2024-07-31') THEN 'E24'
ELSE 'OO' END AS SEASON_CODE
FROM FACT_SALES_LINES)
SELECT S.IDFACTSALESLINES, S.IDBRAND, S.IDBRANDSTORE, S.IDSTORE, S.IDCALENDAR, S.IDITEM, S.IDCUSTOMER, S.IDSTOREORIGINE, S.IDRECEIPTORIGINE, S.IDDISCOUNTTYPE, S.IDCURRENCY, S.CODECOUNTRY, S.DAYOFSALE, S.NUMRECEIPT, S.LINENUMBER, S.CODEITEM, S.CODECUSTOMER, S.LINETYPE, S.TYPEOFSALE, S.CODECURRENCY, S.CODESAISONGESTION, S.CODEMARKETINGACTION, S.VOLSALES, S.VOLSALES_NOTFREE, S.QTRETURN, S.QTSALE, S.TURNOVERLOC, S.SALETURNOVERLOC, S.TURNOVEREURO, S.SALETURNOVEREURO, S.RETURNTURNOVEREURO, S.FLAGDISCOUNT, S.AMTDISCOUNTLOC, S.AMTDISCOUNTEURO, S.NUMDISCOUNT, S.FLAGPROMO, S.FLAGSTRONGPRICE, S.AMTSALEPERIODLOC, S.AMTSALEPERIODEURO, S.AMTONMARKSLOC, S.AMTONMARKSEURO, S.AMTVATEURO, S.PRICESALEITEMCAISHLOC, S.PRICESALEITEMCAISHEURO, S.CODEVAT, S.RATEVAT, S.RECEIPTCANCEL, S.DATERECORD, S.EXCHANGERATE, S.AMTPURCHASEEXCLUDINGTAXEURO, S.NETPROFITMARGINEURO, S.ACTIVE, S.SEASON_CODE, I.*
FROM SALES_TABLE S
LEFT JOIN FILTERED_ITEM_TABLE I
ON S.IDITEM = I.PRODUCT_ID_ITEM)
SELECT S.*, C.SOURCE, C.BRANDNAME, C.CODESTORE, C.EMAIL_EXISTS, C.EMAIL_OPTIN, C.EMAIL_REACHABLE, C.MOBILE_EXISTS, C.MOBILE_OPTIN, C.MOBILE_REACHABLE, C.CUSTOMER_BIRTH_DAY, C.CUSTOMER_BIRTH_MONTH, C.CUSTOMER_BIRTH_YEAR
FROM TABLE_1 S
LEFT JOIN DIM_CUSTOMER C
ON S.CODECUSTOMER = C.CUSTOMERCODE;

----------
-- JOINING SALES TABLE WITH STORES TABLE

WITH SALES_TABLE AS (
    SELECT
        SALES.*,
        SEASONS.SEASON_CODE AS SEASON_CODE
    FROM
        FACT_SALES_LINES AS SALES
        LEFT JOIN DIM_SEASON AS SEASONS ON SALES.IDCALENDAR >= SEASONS.IDCALENDAR_SEASON_START_DATE
        AND SALES.IDCALENDAR <= SEASONS.IDCALENDAR_SEASON_END_DATE
)
SELECT
    S.IDFACTSALESLINES,
    S.IDBRAND,
    S.IDBRANDSTORE,
    S.IDSTORE,
    S.IDCALENDAR,
    S.IDITEM,
    S.IDCUSTOMER,
    S.IDSTOREORIGINE,
    S.IDRECEIPTORIGINE,
    S.IDDISCOUNTTYPE,
    S.IDCURRENCY,
    S.CODECOUNTRY,
    S.DAYOFSALE,
    S.NUMRECEIPT,
    S.LINENUMBER,
    S.CODEITEM,
    S.CODECUSTOMER,
    S.LINETYPE,
    S.TYPEOFSALE,
    S.CODECURRENCY,
    S.CODESAISONGESTION,
    S.CODEMARKETINGACTION,
    S.VOLSALES,
    S.VOLSALES_NOTFREE,
    S.QTRETURN,
    S.QTSALE,
    S.TURNOVERLOC,
    S.SALETURNOVERLOC,
    S.TURNOVEREURO,
    S.SALETURNOVEREURO,
    S.RETURNTURNOVEREURO,
    S.FLAGDISCOUNT,
    S.AMTDISCOUNTLOC,
    S.AMTDISCOUNTEURO,
    S.NUMDISCOUNT,
    S.FLAGPROMO,
    S.FLAGSTRONGPRICE,
    S.AMTSALEPERIODLOC,
    S.AMTSALEPERIODEURO,
    S.AMTONMARKSLOC,
    S.AMTONMARKSEURO,
    S.AMTVATEURO,
    S.PRICESALEITEMCAISHLOC,
    S.PRICESALEITEMCAISHEURO,
    S.CODEVAT,
    S.RATEVAT,
    S.RECEIPTCANCEL,
    S.DATERECORD,
    S.EXCHANGERATE,
    S.AMTPURCHASEEXCLUDINGTAXEURO,
    S.NETPROFITMARGINEURO,
    S.ACTIVE,
    S.SEASON_CODE,
    STR.STORE_ID,
    STR.STORE_ID_BRAND,
    STR.STORE_COUNTRY_CODE,
    STR.STORE_AREA_SALES,
    STR.STORE_SURFACE_RESERVE,
    STR.STORE_ECOM_SMCP,
    STR.STORE_CITY,
    STR.STORE_MANAGEMENT_TYPE_NAME,
    STR.STORE_MANAGER_TYPE,
    STR.STORE_BU_TYPE,
    STR.STORE_RETAIL_TYPE_LABEL,
    STR.STORE_TYPE,
    STR.STORE_CLASSIFICATION,
    STR.STORE_COMMERCIAL_TYPE
FROM
    SALES_TABLE S
    LEFT JOIN DIM_STORE STR ON S.IDSTORE = STR.STORE_ID;


DROP TABLE IF EXISTS SALES_ITEM_CUSTOMER_STORE;
CREATE TABLE MASTER_SALES_ITEM_CUSTOMER_STORE AS
select idstore || '-' || numreceipt as id_numreceipt, *
    from sales_item_customer_store;




